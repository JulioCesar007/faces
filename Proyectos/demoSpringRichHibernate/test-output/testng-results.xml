<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="6458" started-at="2012-07-10T18:58:48Z" finished-at="2012-07-10T18:58:55Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="6458" started-at="2012-07-10T18:58:48Z" finished-at="2012-07-10T18:58:55Z">
      <class name="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()" name="springTestContextBeforeTestClass" is-config="true" duration-ms="22" started-at="2012-07-10T18:58:48Z" finished-at="2012-07-10T18:58:48Z">
        </test-method>
        <test-method status="FAIL" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2012-07-10T18:58:48Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2012-07-10T18:58:48Z">
          <exception class="java.lang.ClassFormatError">
            <message>
              <![CDATA[Absent Code attribute in method that is not native or abstract in class file javax/faces/lifecycle/Lifecycle]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/faces/lifecycle/Lifecycle
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:615)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
	at java.net.URLClassLoader.access$000(URLClassLoader.java:58)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2427)
	at java.lang.Class.getDeclaredMethods(Class.java:1791)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(InitDestroyAnnotationBeanPostProcessor.java:196)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.findLifecycleMetadata(InitDestroyAnnotationBeanPostProcessor.java:178)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessMergedBeanDefinition(InitDestroyAnnotationBeanPostProcessor.java:124)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessMergedBeanDefinition(CommonAnnotationBeanPostProcessor.java:283)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyMergedBeanDefinitionPostProcessors(AbstractAutowireCapableBeanFactory.java:830)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:493)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:913)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:464)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:103)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)
	at org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:228)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:124)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:74)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:202)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:130)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:173)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1125)
	at org.testng.TestRunner.privateRun(TestRunner.java:749)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:317)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:312)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:274)
	at org.testng.SuiteRunner.run(SuiteRunner.java:223)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:995)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:920)
	at org.testng.TestNG.run(TestNG.java:856)
	at org.infinitest.testrunner.JUnit4Runner.runTest(JUnit4Runner.java:54)
	at org.infinitest.testrunner.TestRunnerProcess.runTest(TestRunnerProcess.java:64)
	at org.infinitest.testrunner.TestRunnerProcess.writeTestResultToOutputStream(TestRunnerProcess.java:106)
	at org.infinitest.testrunner.TestRunnerProcess.main(TestRunnerProcess.java:83)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="SKIP" signature="contextInit()" name="contextInit" is-config="true" duration-ms="0" started-at="2012-07-10T18:58:55Z" finished-at="2012-07-10T18:58:55Z">
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2012-07-10T18:58:55Z" finished-at="2012-07-10T18:58:55Z">
        </test-method>
        <test-method status="SKIP" signature="testfindPersisted()" name="testfindPersisted" duration-ms="0" started-at="2012-07-10T18:58:55Z" finished-at="2012-07-10T18:58:55Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="30" started-at="2012-07-10T18:58:55Z" finished-at="2012-07-10T18:58:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest.testfindPersisted()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="getByLoginInformation()" name="getByLoginInformation" duration-ms="1" started-at="2012-07-10T18:58:55Z" depends-on-methods="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest.testfindPersisted" finished-at="2012-07-10T18:58:55Z">
        </test-method>
        <test-method status="SKIP" signature="saveUser()" name="saveUser" duration-ms="1" started-at="2012-07-10T18:58:55Z" depends-on-methods="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest.getByLoginInformation" finished-at="2012-07-10T18:58:55Z">
        </test-method>
        <test-method status="SKIP" signature="getByLoginInformation3()" name="getByLoginInformation3" duration-ms="1" started-at="2012-07-10T18:58:55Z" depends-on-methods="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest.saveUser" finished-at="2012-07-10T18:58:55Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestClass()" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2012-07-10T18:58:55Z" finished-at="2012-07-10T18:58:55Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>

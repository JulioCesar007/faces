<?xml version="1.0" encoding="UTF-8"?>
<testsuite hostname="Joses-MacBook-Pro.local" name="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest" tests="4" failures="0" timestamp="10 Jul 2012 23:58:55 GMT" time="6.458" errors="0">
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest">
    <failure type="java.lang.ClassFormatError" message="Absent Code attribute in method that is not native or abstract in class file javax/faces/lifecycle/Lifecycle">
      <![CDATA[java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/faces/lifecycle/Lifecycle
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:615)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
	at java.net.URLClassLoader.access$000(URLClassLoader.java:58)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2427)
	at java.lang.Class.getDeclaredMethods(Class.java:1791)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.buildLifecycleMetadata(InitDestroyAnnotationBeanPostProcessor.java:196)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.findLifecycleMetadata(InitDestroyAnnotationBeanPostProcessor.java:178)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessMergedBeanDefinition(InitDestroyAnnotationBeanPostProcessor.java:124)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessMergedBeanDefinition(CommonAnnotationBeanPostProcessor.java:283)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyMergedBeanDefinitionPostProcessors(AbstractAutowireCapableBeanFactory.java:830)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:493)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:913)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:464)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:103)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)
	at org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:228)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:124)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:133)
	at org.infinitest.testrunner.JUnit4Runner.runTest(JUnit4Runner.java:54)
	at org.infinitest.testrunner.TestRunnerProcess.runTest(TestRunnerProcess.java:64)
	at org.infinitest.testrunner.TestRunnerProcess.writeTestResultToOutputStream(TestRunnerProcess.java:106)
	at org.infinitest.testrunner.TestRunnerProcess.main(TestRunnerProcess.java:83)
... Removed 22 stack frames]]>
    </failure>
  </testcase>
  <testcase name="@BeforeClass contextInit" time="0.0" classname="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest">
    <skipped/>
  </testcase>
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest">
    <skipped/>
  </testcase>
  <testcase name="testfindPersisted" time="0.0" classname="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest">
    <skipped/>
  </testcase>
  <testcase name="getByLoginInformation" time="0.0010" classname="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest">
    <skipped/>
  </testcase>
  <testcase name="saveUser" time="0.0010" classname="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest">
    <skipped/>
  </testcase>
  <testcase name="getByLoginInformation3" time="0.0010" classname="pe.joedayz.ejemplos.persistence.dao.hibernate.UserDaoTest">
    <skipped/>
  </testcase>
</testsuite>
